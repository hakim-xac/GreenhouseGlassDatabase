<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>